Security
----------------------------------

Cookies
-------

The original online capstone system uses Truman's Central Authentication System (CAS) for user authentication.
CAS is a widely used single sign-on solution that allows users to access multiple applications with a single
set of login credentials. The CAS authentication process involves redirecting the user to a CAS server for
authentication and then redirecting the user back to the original application with a cookie that verifies
the user's identity.

To modify the original capstone system, the PHP file that controls the CAS (phpCAS) is modified. A new cookie
is created that stores the current username of the user, which is then read by the program to determine the
user's identity. This modification enables the system to identify the user without requiring them to repeatedly
authenticate themselves.

The modified capstone system uses the user's identity to control access to different functionalities.
The server blocks any functionality that does not match the user's username. For instance, if a student tries
to access the professor or admin pages, they will be denied access because their username does not match the
corresponding functionality.

The modification to the original capstone system helps to improve its functionality and enhance its security.
By using cookies to store user identities, the system avoids requiring users to authenticate themselves
repeatedly. Additionally, the modified system ensures that only authorized users can access specific features,
preventing unauthorized access and maintaining the security of the system.

Defaults and Instability
-------

In many cases, software systems allow users to change various settings or configurations within the application.
While this can be beneficial for customizing the application to specific needs or preferences, it can also
increase the security risk associated with the application. If users are not familiar with the security
implications of various settings, they may unwittingly make changes that weaken the system's security.

In the case of the modified capstone system, the system has been designed so that it cannot be changed within
the application. This means that the system's defaults are always the most secure defaults, and users cannot
modify them in any way that might inadvertently weaken the system's security.

By not allowing users to change system settings within the application, the system maintains a consistent and
secure configuration. Users do not have to worry about making changes that might inadvertently introduce 
vulnerabilities or weaken the system's security. Instead, they can focus on using the system's features to
manage their capstone projects without having to worry about the system's security.

Furthermore, by not allowing users to change system settings within the application, the system administrators
can ensure that the system remains secure and up-to-date. They can monitor the system and make any necessary
security updates or patches without having to worry about users making changes that might interfere with the
system's security.